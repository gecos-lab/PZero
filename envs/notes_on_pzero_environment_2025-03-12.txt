===================================
 Notes on pzero conda environments

THIS DOCUMENT MUST BE KEPT UPDATED!
===================================

_______________________
Last updated 2025-03-12


1) To build a clean pzero environment, start updating the conda base environment:

conda activate base
conda update -n base -c conda-forge conda
conda update --all

(sometimes repeating this more than once helps to have a completely up-to-date base environment)

3) Then remove any old pzero environment, e.g.:

conda remove --name pzero --all

4) Install packages (from within ./PZero/envs directory):

conda env create -n pzero -f ./pzero-env.yml

or

conda env create -n pzero -f ./pzero-env-from-history.yml

The former includes all packages with specific releases, while the latter includes only requirements listed in pzero-env-from-history.yml.

The logic in the second case is to have the most recent versions as possible, or at least well proven ones (>=), with exceptions (strictly =) motivated in the issues.

Note that version requirements are easily recorded/updated by editing the pzero-env-from-history.yml file and then regenerating the environment as above.

For some strange reason, openpyxl (used to import Excel files) is required by pandas but not automatically added with its dependencies, so we have to add it explicitly to the environment.

Additional modules that where explicitly required in the past, but apparently not now, are pillow>=9.5.0, pythreejs>=2.4.2, and vedo.

This has been tested on Windows 11 and macOS 15 so far.

On macOS it is possible that conda fails to detect the right version of the OS. In this case it is necessary to force the __osx variable with:

conda env config vars set CONDA_OVERRIDE_OSX="11"

Then the value of __osx can be checked with:

conda info

5) Finally record the environment in .yml files (from within ./PZero/envs directory):

conda env export --from-history > ./pzero-env-from-history.yml

and

conda env export > ./pzero-env.yml

This allows a quick installation with (from within ./PZero/envs directory):

conda env create -n pzero -f ./pzero-env.yml



* In case a new empty environment must be created, use:

conda create -n pzero

* In case a channels must be activated (this must be done for each new environment):

conda config --env --add channels conda-forge
conda config --env --add channels loop3d
conda config --env --add channels anaconda